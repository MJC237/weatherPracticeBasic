{"ast":null,"code":"var _jsxFileName = \"/Users/mjc/Documents/ex/to-do-list/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst apiKey = '53df5b52f003d1bd1df16a7f6f299393';\n\nclass App extends React.Component {\n  //初始化值\n  constructor() {\n    super();\n\n    this.getTemperature = zipcode => {\n      const url = `http://api.openweathermap.org/data/2.5/forecast?zip=${zipcode}&appid=${apiKey} `;\n      fetch(url).then(response => {\n        return response.json();\n      }).then(data => {\n        const kelvin = data.main.temp;\n        const celcius = kelvin - 273.15;\n        this.setState({\n          temperature: celcius\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      zipcode: '',\n      temperature: \"\"\n    };\n  }\n\n  render() {\n    const list = () => {\n      let {\n        temperature\n      } = this.state;\n      const res = [];\n\n      for (let i = 0; i < temperature.list.length; i++) {\n        res.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"colorFont\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }, \"\\u7B2C\", i + 1, \"\\u5929\"), \"  \", temperature.list[i].main.temp));\n      }\n\n      return res;\n    };\n\n    if (!this.state.temperature) {\n      return null;\n    }\n\n    if (!this.state.zipcode) {\n      return null;\n    }\n\n    let {\n      weather\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \" \", temperature.city.country, \"  \", temperature.city.name, \"  \", weather.cnt, \" \\u5929\\u672A\\u6765\\u5929\\u6C14\\u9884\\u6D4B\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"deteleUnderLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, list(), \"   \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.zipcode,\n      onChange: this.handleChange,\n      placeholder: \"Zip Code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.fetchWeather(this.state.zipcode);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"\\u83B7\\u53D6\\u5929\\u6C14\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mjc/Documents/ex/to-do-list/src/App.js"],"names":["React","apiKey","App","Component","constructor","getTemperature","zipcode","url","fetch","then","response","json","data","kelvin","main","temp","celcius","setState","temperature","catch","error","console","log","state","render","list","res","i","length","push","weather","city","country","name","cnt","handleChange","props","fetchWeather"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './App.css';\nconst apiKey = '53df5b52f003d1bd1df16a7f6f299393';\n\n\nclass App extends React.Component{//初始化值\n       constructor(){\n       super();\n      this.state={\n      \n       zipcode :'',\n  \n       temperature:\"\"\n      \n\n      }\n   \n  \n}\ngetTemperature=(zipcode)=>{\n  const url=`http://api.openweathermap.org/data/2.5/forecast?zip=${zipcode}&appid=${apiKey} `\n  fetch(url).then(response=>{\n    return response.json();\n  }).then(data=>{\n   const kelvin=data.main.temp;\n   const celcius=kelvin-273.15;\n   this.setState({\n     temperature:celcius\n   })\n  }).catch(error=>{\n    console.log(error);\n  })\n}\n      \n\n  render(){\n\n\n    const list = () => {\n\n      let {temperature}=this.state;\n        const res = [];\n            for(let i = 0; i < temperature.list.length; i++) {\n              res.push(\n\n              <li key={i}>\n                    <span className=\"colorFont\">第{i+1}天 \n                    </span>  {temperature.list[i].main.temp}\n              </li>)\n\n            }\n      return res\n    }\n\n\n          if(!this.state.temperature){\n            return null;\n          }\n          if(!this.state.zipcode){\n            return null;\n          }\n\n   \n          let {weather}=this.state;\n                                          \n        return(\n         \n            <div className=\"App\">\n\n\n              <h2> {temperature.city.country}  {temperature.city.name}  {weather.cnt} 天未来天气预测</h2>\n                  <ul className=\"deteleUnderLine\">\n\n                      {list()  }   {/*调用函数释*/}\n                  </ul>\n\n\n                       \n                            <input type=\"text\" \n                                  value={this.state.zipcode}\n\n                                  onChange={this.handleChange} placeholder=\"Zip Code\"/>\n\n                            <button onClick={()=>{this.props.fetchWeather(this.state.zipcode)}}>获取天气</button>\n                       \n\n\n          </div>\n\n                \n        )\n\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}